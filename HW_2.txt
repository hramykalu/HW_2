JSON
 4. Создать внешний репозиторий c названием JSON. 
 -- создание репозитория на GitHub 
 5. Клонировать репозиторий JSON на локальный компьютер.
 -- git clone git@github.com:hramykalu/JSON.git
 6. Внутри локального JSON создать файл “new.json”. 
 -- touch new.json
 7. Добавить файл под гит. 
 -- git add new.json
 8. Закоммитить файл.
 -- git commit -m 'adding new.json'
 9. Отправить файл на внешний GitHub репозиторий. 
 --git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 --vim new.json 
 {
"Full_name": "Hramyka_Lidziya_Yurievna" ,
"Age" : 25 ,
"Pets" : "cat" ,
"Future_desired_salary" : 600
}
esc :wq
 11. Отправить изменения на внешний репозиторий. 
-- git add new.json
-- git commit -m "add info in new.json"
-- git push
 12. Создать файл preferences.json
 -- touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 -- vim preferences.json
{
"film" : "gone_with_the_wind" ,
"tv_series" : "grey's anatomy" ,
"food" : "pamelo" ,
"season" : "autumn" ,
"country" : "sweden"
}
esc :wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON 
 -- touch skills.json
 -- vim skills.json
 { "1" : "Basics_SDLC_STLC",
   "2" : "Client-server_architecture",
   "3" : "HTTP_response_codes",
   "4" : "HTTP_structure",
   "5" : "JSON_XML",
   "6" : "API_Postman",
   "7" : "Log-files",
   "8" : "Charles_Fiddler", 
   "9" : "Devtools",
   "10" : "Mobile_testing",
   "11" : "VPN",
   "12" : "Bash",
   "13" : "SQL",
   "14" : "Jmeter",
   "15" : "Scrum",
   "16" : "Python_basics" 
      } 
esc :wq
 15. Отправить сразу 2 файла на внешний репозиторий.
-- git add .
-- git commit -m "add preferences.json and skills.json"
-- git push
 16. На веб интерфейсе создать файл bug_report.json.
 -- Нажать Create new file. Cоздать новый файл bug_report.json
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 -- Нажать Commit changes.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 -- Нажать edit file.
{
 "id" : 124
 "name" : "Application crashes upon clicking the SAVE button while creating a new user" ,
 "project" : "New Project",
 "version" : 5.01,
 "environment" : ["Windows 10 Pro v.20H2" , "SQL Server 2019"],
 "steps_to_reproduce": [
  "Login into the Application" ,
  "Navigate to the Users Menu to New User" ,
  "Fill out all the user information fields" ,
  "Click on the SAVE button" 
      ],
 "expected_result" : "successful registration message",
 "actual_result": "error page ",
 "reproducibility": "always",
 "severity" : "critical",
 "priority": "high",
 "status": "assigned",
 "author": "hramukalu",
 "assignee": "ivanovmd",
 "attachment": "abc.log"
}
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 -- Нажать Commit changes.
 20. Синхронизировать внешний и локальный репозиторий JSON
-- git pull

XML
 21. Создать внешний репозиторий c названием XML. 
  -- создание репозитория на GitHub 
 22. Клонировать репозиторий XML на локальный компьютер.
 -- git clone git@github.com:hramykalu/XML.git
 23. Внутри локального XML создать файл “new.xml”.
 --touch new.xml
 24. Добавить файл под гит.
 -- git add .
 25. Закоммитить файл.
 -- git commit -m 'adding new.xml'
 26. Отправить файл на внешний GitHub репозиторий.
 -- git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 --vim new.xml
<?xml version="1.0"?>
<Person>
<Full_name>Hramyka_Lidziya_Yurievna </Full_name>
<Age>25</Age> 
<Pets>cat</Pets> 
<Future_desired_salary>600</Future_desired_salary> 
</Person>
esc :wq
 28. Отправить изменения на внешний репозиторий.
-- git add new.xml
-- git commit -m "add info in new.xml"
-- git push
 29. Создать файл preferences.xml
-- touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
-- vim preferences.xml
<?xml version="1.0"?>
<preferences> 
<film>gone_with_the_wind</film>
<tv_series>grey's anatomy</tv_series>
<food>pamelo</food>
<season>autumn</season>
<country>sweden</country>
</preferences> 
esc :wq
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
-- touch skills.xml
 -- vim skills.xml
<?xml version="1.0"?>
<skills>
<1>Basics_SDLC_STLC </1>
<2> Client-server_architecture </2>
<3> HTTP_response_codes</3>
<4> HTTP_structure</4>
<5> JSON_XML</5>
<6> API_Postman </6>
<7> Log-files</7>
<8> Charles_Fiddler</8> 
<9> Devtools</9>
<10> Mobile_testing</10>
<11>VPN</11>
<12>Bash</12>
<13> SQL</13>
<14>Jmeter</14>
<15> Scrum</15>
<16> Python_basics</16>
</skills> 
esc :wq   
 32. Сделать коммит в одну строку.
-- git add .
-- git commit -m "add preferences.xml and skills.xml"
или 
-- git add . && git commit -m "add preferences.xml and skills.xml"
 33. Отправить сразу 2 файла на внешний репозиторий.
-- git push
 34. На веб интерфейсе создать файл bug_report.xml.
-- Нажать Create new file. Cоздать новый файл bug_report.xml
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 -- Нажать Commit changes.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 -- Нажать edit file.

<?xml version="1.0"?>
<bug_report>
<id>124</id>
<name>Application crashes upon clicking the SAVE button while creating a new user</name>
<project>New Project</project>
<version>5.01</version>
<environment>Windows 10 Pro v.20H2 , SQL Server 2019</environment>
<steps_to_reproduce>
 1) Login into the Application ,
 2) Navigate to the Users Menu, to New User ,
 3) Fill out all the user information fields ,
 4) Click on the SAVE button 
</steps_to_reproduce>
<expected_result>successful registration message</expected_result>
<actual_result>error page</actual_result>
<reproducibility>always</reproducibility>
<severity>critical</severity>
<priority>high</priority>
<status>assigned</status>
<author>hramukalu</author>
<assignee>ivanovmd</assignee>
<attachment>abc.log</attachment>
</bug_report>
  
37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 -- Нажать Commit changes.
 38. Синхронизировать внешний и локальный репозиторий XML
-- git pull

 TXT
 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер.
-- git clone git@github.com:hramykalu/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.
-- touch new.txt
 4. Добавить файл под гит.
-- git add new.txt
 5. Закоммитить файл.
-- git commit -m 'adding new.txt'
 6. Отправить файл на внешний GitHub репозиторий.
-- git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
-- vim new.txt

1) Hramyka_Lidziya_Yurievna 
2) 25 years old
3) cat
4) 600 

esc :wq
8. Отправить изменения на внешний репозиторий.
-- git add new.txt
-- git commit -m "add info in new.txt"
-- git push
 9. Создать файл preferences.txt
-- touch preferences.xml
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
-- vim preferences.xml

Film - gone_with_the_wind;
tv_series - grey's anatomy;
food - pamelo;
season - autumn;
country -sweden.

esc :wq
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
 -- touch skills.txt
 -- vim skills.txt

1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.
2. Что такое клиент-серверная архитектура.
3. HTTP Методы запросов на сервер.
4. Коды ответов HTTP сервера.
5. Структуры HTTP запросов и ответов.
6. Что такое JSON, XML. Их структура.
7. Тестирование API через Postman (JS, автотесты API).
8. Снятие и чтение логов c внешнего сервера.
9. Снифинг http web трафика через Charles и Fiddler.
10. Dev Tools веб браузеров (Google Chrome, FireFox).
11. VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)
12. Мобильное тестирование.
13. Особенность iOS, Android, гайдлайны.
14. Сборка iOS приложений на XCode. 
15. Сборка Android приложений на Android Studio.
16. ADB (управление андройд девайсами).
17. Настройка прокси и vpn на iOS и Android.
18. Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.
19. Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)
20. Основы bash скриптинг, автоматизация рутинных задач на сервере.
21. Доступ к удалённым серверам.
22. Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).
23. База данных Postgres (установка, настройка и использование).
24. Нереляционная база данных Redis (установка, настройка и использование).
25. Нагрузочное тестирование в Jmeter.
26. Методология разработки Scrum.
27. Python. (Изучение основ. Создание клиент серверного приложения)

esc :wq
12. Сделать коммит в одну строку.
-- git add .
-- git commit -m "add preferences.txt and skills.txt"
или 
-- git add . && git commit -m "add preferences.txt and skills.txt"
 13. Отправить сразу 2 файла на внешний репозиторий.
-- git push
 14. На веб интерфейсе создать файл bug_report.txt.
-- Нажать Create new file. Cоздать новый файл bug_report.txt
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
-- Нажать Commit changes.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 -- Нажать edit file.

id - 124;
name - Application crashes upon clicking the SAVE button while creating a new user;
project - New Project;
version - 5.01;
environment - Windows 10 Pro v.20H2 , SQL Server 2019;
steps_to_reproduce - 
  1) Login into the Application ,
  2) Navigate to the Users Menu to New User ,
  3) Fill out all the user information fields ,
  4) Click on the SAVE button ;
expected_result - successful registration message;
actual_result - error page;
reproducibility - always;
severity - critical;
priority - high;
status - assigned;
author - hramukalu;
assignee - ivanovmd;
attachment - abc.log.

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 -- Нажать Commit changes.
 18. Синхронизировать внешний и локальный репозиторий TXT
--git pull
